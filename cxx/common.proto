syntax = "proto2";
package ProtoCommon;

enum MessageType {
    GENERIC_REPLY = 0;
    INSERT_LIMIT_ORDER = 1;
    INSERT_MARKET_ORDER = 2;
    CANCEL_ORDER = 3;
    LEVEL_UPDATE = 4;
    TRADE = 5;
    CREATE_MARKET = 6;
    CREATE_MARKET_REPLY = 7;
    POSITION_UPDATE = 8;
}

enum Side {
    BUY = 0;
    SELL = 1;
}

message Instrument {
    required uint64 id = 1;
    required uint64 precision = 2;
}

message GenericReply {
    required uint32 request_id  = 1;
    required uint32 error_code  = 2;
    optional string text        = 3;
}

message InsertLimitOrder {
    required uint32 request_id = 1;
    required Instrument instrument = 2;
    required string account_name = 3;
    required uint64 volume = 4;
    required int64 price = 5; // in divisor_ticks, convertible with precision
    required Side side = 6;
}

message InsertMarketOrder {
    required uint32 request_id = 1;
    required Instrument instrument = 2;
    required string account_name = 3;
    required uint64 volume = 4;
    required Side side = 5;
}

message CancelOrder {
    required uint32 request_id = 1;
    required Instrument instrument = 2;
    required string account_name = 3;
    required int64 price = 4;
    required Side side = 5;
}

message LevelUpdate {
    required Instrument instrument = 1;
    required string account_name = 2;
    required uint64 volume = 3;
    required int64 price = 4;
    required Side side = 5;
}

message Trade {
    required Instrument instrument = 1;
    required uint64 volume = 2;
    required int64 price = 3;
    required string passive_account = 4;
    required Side passive_side = 5;
}

message CreateMarket {
    required Instrument instrument = 1;
    required int64 settlement_price = 2;
    repeated string user_name = 3;
}

message CreateMarketReply {
    required Instrument instrument = 1;
    required uint32 error_code = 2;
    optional string text = 3;
}

message PositionUpdate {
    required Instrument instrument = 1;
    required string account_name = 2;
    required int64 position = 3;
}

message Message {
    repeated MessageType type = 1;
    optional InsertLimitOrder insert_limit_order = 2;
    optional InsertMarketOrder insert_market_order = 3;
    optional CancelOrder cancel_order = 4;
    optional LevelUpdate level_update = 5;
    optional Trade trade = 6;
    optional CreateMarket create_market = 7;
    optional CreateMarketReply create_market_reply = 8;
    optional PositionUpdate position_update = 9;
}